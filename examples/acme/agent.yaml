apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: onify-agent
    name: onify-agent
  name: onify-agent
  namespace: onify-citizen-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: onify-agent
      task: onify-agent
  serviceName: onify-agent
  template:
    metadata:
      labels:
        app: onify-agent
        task: onify-agent
    spec:
      containers:
        - env:
            - name: hub_version
              value: v2
            - name: log_level
              value: "2"
            - name: log_type
              value: "1"
          image: eu.gcr.io/onify-images/hub/agent-server:latest
          imagePullPolicy: Always
          name: onify-agent
          ports:
            - containerPort: 8080
              name: onify-agent
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      imagePullSecrets:
        - name: onify-regcred
---
apiVersion: v1
kind: Service
metadata:
  name: onify-agent
  namespace: onify-citizen-test
spec:
  ports:
    - name: onify-agent
      port: 8080
      protocol: TCP
  selector:
    app: onify-agent
    task: onify-agent
  type: ClusterIP
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: onify-agent
#  namespace: onify-citizen-test
#spec:
#  ingressClassName: nginx
#  rules:
#    - host: onify-agent.acme.org
#      http:
#        paths:
#          - backend:
#              service:
#                name: onify-agent
#                port:
#                  number: 8080
#            pathType: ImplementationSpecific
